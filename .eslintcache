[{"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/Routes.js":"1","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Home.js":"2","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/index.js":"3","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Login.js":"4","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Hierarchy.js":"5","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Doors.js":"6","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Lock.js":"7","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Unlock.js":"8","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/cookiestore.js":"9"},{"size":1391,"mtime":1608758132802,"results":"10","hashOfConfig":"11"},{"size":1032,"mtime":1608766232480,"results":"12","hashOfConfig":"11"},{"size":222,"mtime":1608655946647,"results":"13","hashOfConfig":"11"},{"size":2500,"mtime":1608761219167,"results":"14","hashOfConfig":"11"},{"size":5595,"mtime":1608766769555,"results":"15","hashOfConfig":"11"},{"size":953,"mtime":1608766121098,"results":"16","hashOfConfig":"11"},{"size":3265,"mtime":1608766563087,"results":"17","hashOfConfig":"11"},{"size":3273,"mtime":1608766434505,"results":"18","hashOfConfig":"11"},{"size":95,"mtime":1608560410834,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lf61q5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/Routes.js",[],["41","42"],"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Home.js",[],"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/index.js",[],"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Login.js",["43"],"import React, { Component } from 'react';\nimport { Container, Form, Button, Card, Jumbotron } from 'react-bootstrap';\nimport cookies from \"../cookiestore\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      session: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let query = \"http://localhost:5000/registered_users?username=\".concat(this.state.username).concat(\"&password=\").concat(this.state.password)\n    console.log(query);\n    fetch(query)\n      .then(response => response.json())\n      .catch(error => console.error('Error:', error))\n      .then(response => {\n        console.log('Success:', response);\n        console.log(response.length);\n        if (response.length === 0) {\n          alert(\"Incorrect credentials, please try again\");\n        }\n        else {\n          this.state.session = response;\n          cookies.set(\"session\", response[0].first_name + \" \" + response[0].surname);\n          this.props.history.push('/');\n        }\n      });\n  }\n\n\n  render() {\n    return (\n      <Container>\n      <br />\n      <Jumbotron>\n        <h1>Login</h1>\n      </Jumbotron>\n      <Card>\n        <Card.Header>Please enter login information</Card.Header>\n        <Card.Body>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group size=\"lg\" controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                autoFocus\n                required\n                minLength=\"6\"\n                type=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group size=\"lg\" controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                required\n                minLength=\"6\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button block size=\"lg\" type=\"submit\" disabled={!this.validateForm()}>\n              Login\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </Container>\n    );\n  }\n\n}\n","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Hierarchy.js",["44","45","46"],"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Doors.js",["47"],"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Lock.js",["48"],"import React from 'react';\nimport { Container, Jumbotron, Card, Button, InputGroup, FormControl, Form, Breadcrumb } from 'react-bootstrap/';\nimport cookies from '../cookiestore';\n\nclass Lock extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      session: \"\"\n    };\n  }\n\n  validateForm() {\n    return this.state.id.length > 0;\n  }\n\n  async getDoors(node) {\n    let query = \"http://localhost:5000/doors?parent_area=\".concat(node);\n    // console.log(query);\n    const response = await fetch(query);\n    const json = await response.json();\n    var data = json;\n    // console.log(data);\n    return data;\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let query = \"http://localhost:5000/doors?id=\".concat(this.state.id);\n    console.log(query);\n    fetch(query)\n    .then(response => response.json()) \n    .then(json => {\n      let data = json[0];\n      if (typeof data === 'undefined' || data === []) {\n        alert(\"No door exists with id \" + this.state.id);\n      }\n      data.status = \"closed\";\n      // console.log(data);\n      console.log(JSON.stringify(data));\n      fetch(\"http://localhost:5000/doors/\".concat(this.state.id), {\n        method: \"PUT\",\n        body: JSON.stringify(data),\n        headers: {\"Content-type\": \"application/json; charset=UTF-8\"}\n      })\n      .then(response => response.json()) \n      .then(json => {\n        if (typeof json[0] !== 'undefined' || json[0] !== []) {\n          alert(\"Door \" + this.state.id + \" set to 'closed'\");\n        }\n      })\n      .catch(err => {\n        alert(\"No door exists with id \" + this.state.id);\n      });\n    })\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <Container>\n        <br />\n        <Jumbotron>\n          <h1>Lock door</h1>\n        </Jumbotron>\n        <Breadcrumb>\n          <Breadcrumb.Item href=\"/\">Home</Breadcrumb.Item>\n          <Breadcrumb.Item href=\"/doors\">Doors</Breadcrumb.Item>\n          <Breadcrumb.Item active>Lock</Breadcrumb.Item>\n        </Breadcrumb>\n        <Card className=\"border-0\" bg=\"light\">\n          <Card.Body>\n            <h4>Enter the ID of the door you wish to Lock</h4>\n            <br/>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group className=\"mb-0\" controlId=\"id\">\n                <InputGroup className=\"\">\n                  <FormControl\n                    placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\n                    aria-label=\"Door ID\"\n                    aria-describedby=\"basic-addon2\"\n                    autoFocus\n                    required\n                    minLength=\"5\"\n                    type=\"id\"\n                    value={this.state.id}\n                    onChange={this.handleChange}\n                  />\n                  <InputGroup.Append>\n                    <Button block type=\"submit\" disabled={!this.validateForm()}>\n                      Lock Door\n                  </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nexport default Lock;","/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/views/Unlock.js",["49"],"/Users/hendrikvanheerden/Documents/GitHub/SecuriTree/src/cookiestore.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":42,"column":11,"nodeType":"56","endLine":42,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":65,"column":14,"nodeType":"59","messageId":"63","endLine":65,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":87,"column":14,"nodeType":"59","messageId":"63","endLine":87,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":15},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'cookies' is defined but never used.","Identifier","unusedVar","no-redeclare","'index' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]